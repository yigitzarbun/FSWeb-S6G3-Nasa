{"ast":null,"code":"import _slicedToArray from \"/Users/yigitzarbun/Desktop/Workintech/sprint_6/s6g3/FSWeb-S6G3-Nasa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yigitzarbun/Desktop/Workintech/sprint_6/s6g3/FSWeb-S6G3-Nasa/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Tarih from \"./Tarih\";\nimport Main from \"./Main\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nfunction App() {\n  //State hooks\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    APOD = _useState2[0],\n    setAPOD = _useState2[1];\n  var _useState3 = useState(dateFormatter(new Date())),\n    _useState4 = _slicedToArray(_useState3, 2),\n    date = _useState4[0],\n    setDate = _useState4[1]; //Get Data\n  useEffect(function () {\n    axios.get(\"https://api.nasa.gov/planetary/apod?api_key=5dqIKcC152afcVcE1kaWF70uoMkXN5WlcXKV0jt5&date=\" + date).then(function (response) {\n      setAPOD(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [date]);\n\n  //Select Date\n  function dateChanger(tarih) {\n    setDate(dateFormatter(tarih));\n  }\n  function dateFormatter(tarih) {\n    var gun = new Date(tarih);\n    var gercekTarih = \"\".concat(gun.getFullYear(), \"-\").concat(gun.getMonth() + 1, \"-\").concat(gun.getDate());\n    return gercekTarih;\n  }\n  //Reset Date\n  function dateReset() {\n    setDate(\"\");\n  }\n\n  //JSX\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    src: \"./images/nasa.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tarih, {\n    selectDate: dateChanger,\n    resetDate: dateReset,\n    date: date\n    /*dateResetButtonAppear={dateResetButtonAppear}*/,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    data: APOD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Header","Tarih","Main","axios","styled","App","APOD","setAPOD","dateFormatter","Date","date","setDate","get","then","response","data","catch","error","console","log","dateChanger","tarih","gun","gercekTarih","getFullYear","getMonth","getDate","dateReset"],"sources":["/Users/yigitzarbun/Desktop/Workintech/sprint_6/s6g3/FSWeb-S6G3-Nasa/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Tarih from \"./Tarih\";\nimport Main from \"./Main\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  //State hooks\n  const [APOD, setAPOD] = useState(\"\");\n  const [date, setDate] = useState(dateFormatter(new Date()));\n  //Get Data\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.nasa.gov/planetary/apod?api_key=5dqIKcC152afcVcE1kaWF70uoMkXN5WlcXKV0jt5&date=\" +\n          date\n      )\n      .then((response) => {\n        setAPOD(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [date]);\n\n  //Select Date\n  function dateChanger(tarih) {\n    setDate(dateFormatter(tarih));\n  }\n\n  function dateFormatter(tarih) {\n    let gun = new Date(tarih);\n    let gercekTarih = `${gun.getFullYear()}-${gun.getMonth() +\n      1}-${gun.getDate()}`;\n    return gercekTarih;\n  }\n  //Reset Date\n  function dateReset() {\n    setDate(\"\");\n  }\n\n  //JSX\n  return (\n    <div className=\"App\">\n      <Header src=\"./images/nasa.png\" />\n      <Tarih\n        selectDate={dateChanger}\n        resetDate={dateReset}\n        date={date}\n        /*dateResetButtonAppear={dateResetButtonAppear}*/\n      />\n      <Main data={APOD} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,GAAG,GAAG;EACb;EAAA,gBACwBN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BO,IAAI;IAAEC,OAAO;EAAA,iBACIR,QAAQ,CAACS,aAAa,CAAC,IAAIC,IAAI,EAAE,CAAC,CAAC;IAAA;IAApDC,IAAI;IAAEC,OAAO,kBACpB;EACAb,SAAS,CAAC,YAAM;IACdK,KAAK,CACFS,GAAG,CACF,4FAA4F,GAC1FF,IAAI,CACP,CACAG,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClBP,OAAO,CAACO,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;;EAEV;EACA,SAASU,WAAW,CAACC,KAAK,EAAE;IAC1BV,OAAO,CAACH,aAAa,CAACa,KAAK,CAAC,CAAC;EAC/B;EAEA,SAASb,aAAa,CAACa,KAAK,EAAE;IAC5B,IAAIC,GAAG,GAAG,IAAIb,IAAI,CAACY,KAAK,CAAC;IACzB,IAAIE,WAAW,aAAMD,GAAG,CAACE,WAAW,EAAE,cAAIF,GAAG,CAACG,QAAQ,EAAE,GACtD,CAAC,cAAIH,GAAG,CAACI,OAAO,EAAE,CAAE;IACtB,OAAOH,WAAW;EACpB;EACA;EACA,SAASI,SAAS,GAAG;IACnBhB,OAAO,CAAC,EAAE,CAAC;EACb;;EAEA;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB,oBAAC,MAAM;IAAC,GAAG,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAClC,oBAAC,KAAK;IACJ,UAAU,EAAES,WAAY;IACxB,SAAS,EAAEO,SAAU;IACrB,IAAI,EAAEjB;IACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACA,eACF,oBAAC,IAAI;IAAC,IAAI,EAAEJ,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChB;AAEV;AAEA,eAAeD,GAAG"},"metadata":{},"sourceType":"module"}